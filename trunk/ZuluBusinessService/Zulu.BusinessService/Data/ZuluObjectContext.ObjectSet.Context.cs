//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data.Common;
using System.Data.EntityClient;
using System.Data.Metadata.Edm;
using System.Data.Objects.DataClasses;
using System.Data.Objects;
using System.Data;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace Zulu.BusinessService.Data
{
    public partial class ZuluDataContext : ObjectContext
    {
        public const string ConnectionString = "name=ZuluDataContext";
        public const string ContainerName = "ZuluDataContext";
    
        #region Constructors
    
        public ZuluDataContext()
            : base(ConnectionString, ContainerName)
        {
            Initialize();
        }
    
        public ZuluDataContext(string connectionString)
            : base(connectionString, ContainerName)
        {
            Initialize();
        }
    
        public ZuluDataContext(EntityConnection connection)
            : base(connection, ContainerName)
        {
            Initialize();
        }
    
        private void Initialize()
        {
            // Creating proxies requires the use of the ProxyDataContractResolver and
            // may allow lazy loading which can expand the loaded graph during serialization.
            ContextOptions.ProxyCreationEnabled = false;
            ObjectMaterialized += new ObjectMaterializedEventHandler(HandleObjectMaterialized);
        }
    
        private void HandleObjectMaterialized(object sender, ObjectMaterializedEventArgs e)
        {
            var entity = e.Entity as IObjectWithChangeTracker;
            if (entity != null)
            {
                bool changeTrackingEnabled = entity.ChangeTracker.ChangeTrackingEnabled;
                try
                {
                    entity.MarkAsUnchanged();
                }
                finally
                {
                    entity.ChangeTracker.ChangeTrackingEnabled = changeTrackingEnabled;
                }
                this.StoreReferenceKeyValues(entity);
            }
        }
    
        #endregion
    
        #region ObjectSet Properties
    
        public ObjectSet<Address> Addresses
        {
            get { return _addresses  ?? (_addresses = CreateObjectSet<Address>("Addresses")); }
        }
        private ObjectSet<Address> _addresses;
    
        public ObjectSet<ButtonControl> ButtonControls
        {
            get { return _buttonControls  ?? (_buttonControls = CreateObjectSet<ButtonControl>("ButtonControls")); }
        }
        private ObjectSet<ButtonControl> _buttonControls;
    
        public ObjectSet<Category> Categories
        {
            get { return _categories  ?? (_categories = CreateObjectSet<Category>("Categories")); }
        }
        private ObjectSet<Category> _categories;
    
        public ObjectSet<City> Cities
        {
            get { return _cities  ?? (_cities = CreateObjectSet<City>("Cities")); }
        }
        private ObjectSet<City> _cities;
    
        public ObjectSet<CountryOfOrigin> CountryOfOrigins
        {
            get { return _countryOfOrigins  ?? (_countryOfOrigins = CreateObjectSet<CountryOfOrigin>("CountryOfOrigins")); }
        }
        private ObjectSet<CountryOfOrigin> _countryOfOrigins;
    
        public ObjectSet<DamageByProductVariant> DamageByProductVariants
        {
            get { return _damageByProductVariants  ?? (_damageByProductVariants = CreateObjectSet<DamageByProductVariant>("DamageByProductVariants")); }
        }
        private ObjectSet<DamageByProductVariant> _damageByProductVariants;
    
        public ObjectSet<DamageType> DamageTypes
        {
            get { return _damageTypes  ?? (_damageTypes = CreateObjectSet<DamageType>("DamageTypes")); }
        }
        private ObjectSet<DamageType> _damageTypes;
    
        public ObjectSet<Distributor> Distributors
        {
            get { return _distributors  ?? (_distributors = CreateObjectSet<Distributor>("Distributors")); }
        }
        private ObjectSet<Distributor> _distributors;
    
        public ObjectSet<DistributorType> DistributorTypes
        {
            get { return _distributorTypes  ?? (_distributorTypes = CreateObjectSet<DistributorType>("DistributorTypes")); }
        }
        private ObjectSet<DistributorType> _distributorTypes;
    
        public ObjectSet<FormControl> FormControls
        {
            get { return _formControls  ?? (_formControls = CreateObjectSet<FormControl>("FormControls")); }
        }
        private ObjectSet<FormControl> _formControls;
    
        public ObjectSet<Log> Logs
        {
            get { return _logs  ?? (_logs = CreateObjectSet<Log>("Logs")); }
        }
        private ObjectSet<Log> _logs;
    
        public ObjectSet<Media> Media
        {
            get { return _media  ?? (_media = CreateObjectSet<Media>("Media")); }
        }
        private ObjectSet<Media> _media;
    
        public ObjectSet<Product> Products
        {
            get { return _products  ?? (_products = CreateObjectSet<Product>("Products")); }
        }
        private ObjectSet<Product> _products;
    
        public ObjectSet<ProductVariant> ProductVariants
        {
            get { return _productVariants  ?? (_productVariants = CreateObjectSet<ProductVariant>("ProductVariants")); }
        }
        private ObjectSet<ProductVariant> _productVariants;
    
        public ObjectSet<Purchase> Purchases
        {
            get { return _purchases  ?? (_purchases = CreateObjectSet<Purchase>("Purchases")); }
        }
        private ObjectSet<Purchase> _purchases;
    
        public ObjectSet<PurchaseProductVariant> PurchaseProductVariants
        {
            get { return _purchaseProductVariants  ?? (_purchaseProductVariants = CreateObjectSet<PurchaseProductVariant>("PurchaseProductVariants")); }
        }
        private ObjectSet<PurchaseProductVariant> _purchaseProductVariants;
    
        public ObjectSet<Setting> Settings
        {
            get { return _settings  ?? (_settings = CreateObjectSet<Setting>("Settings")); }
        }
        private ObjectSet<Setting> _settings;
    
        public ObjectSet<State> States
        {
            get { return _states  ?? (_states = CreateObjectSet<State>("States")); }
        }
        private ObjectSet<State> _states;
    
        public ObjectSet<StockAllocation> StockAllocations
        {
            get { return _stockAllocations  ?? (_stockAllocations = CreateObjectSet<StockAllocation>("StockAllocations")); }
        }
        private ObjectSet<StockAllocation> _stockAllocations;
    
        public ObjectSet<Supplier> Suppliers
        {
            get { return _suppliers  ?? (_suppliers = CreateObjectSet<Supplier>("Suppliers")); }
        }
        private ObjectSet<Supplier> _suppliers;
    
        public ObjectSet<User> Users
        {
            get { return _users  ?? (_users = CreateObjectSet<User>("Users")); }
        }
        private ObjectSet<User> _users;
    
        public ObjectSet<UserAttribute> UserAttributes
        {
            get { return _userAttributes  ?? (_userAttributes = CreateObjectSet<UserAttribute>("UserAttributes")); }
        }
        private ObjectSet<UserAttribute> _userAttributes;
    
        public ObjectSet<UserRole> UserRoles
        {
            get { return _userRoles  ?? (_userRoles = CreateObjectSet<UserRole>("UserRoles")); }
        }
        private ObjectSet<UserRole> _userRoles;
    
        public ObjectSet<UserRoleAttribute> UserRoleAttributes
        {
            get { return _userRoleAttributes  ?? (_userRoleAttributes = CreateObjectSet<UserRoleAttribute>("UserRoleAttributes")); }
        }
        private ObjectSet<UserRoleAttribute> _userRoleAttributes;
    
        public ObjectSet<Warehouse> Warehouses
        {
            get { return _warehouses  ?? (_warehouses = CreateObjectSet<Warehouse>("Warehouses")); }
        }
        private ObjectSet<Warehouse> _warehouses;
    
        public ObjectSet<WarehouseType> WarehouseTypes
        {
            get { return _warehouseTypes  ?? (_warehouseTypes = CreateObjectSet<WarehouseType>("WarehouseTypes")); }
        }
        private ObjectSet<WarehouseType> _warehouseTypes;

        #endregion
    }
}
